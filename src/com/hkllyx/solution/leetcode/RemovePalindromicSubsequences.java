package com.hkllyx.solution.leetcode;

import com.hkllyx.solution.util.info.Difficulty;
import com.hkllyx.solution.util.info.Solution;

/**
 * <p>You are given a string <code>s</code> consisting <strong>only</strong> of letters <code>&#39;a&#39;</code> and <code>&#39;b&#39;</code>. In a single step you can remove one <strong>palindromic subsequence</strong> from <code>s</code>.</p>
 *
 * <p>Return <em>the <strong>minimum</strong> number of steps to make the given string empty</em>.</p>
 *
 * <p>A string is a <strong>subsequence</strong> of a given string if it is generated by deleting some characters of a given string without changing its order. Note that a subsequence does <strong>not</strong> necessarily need to be contiguous.</p>
 *
 * <p>A string is called <strong>palindrome</strong> if is one that reads the same backward as well as forward.</p>
 *
 * <p>&nbsp;</p>
 * <p><strong>Example 1:</strong></p>
 *
 * <pre>
 * <strong>Input:</strong> s = &quot;ababa&quot;
 * <strong>Output:</strong> 1
 * <strong>Explanation:</strong> s is already a palindrome, so its entirety can be removed in a single step.
 * </pre>
 *
 * <p><strong>Example 2:</strong></p>
 *
 * <pre>
 * <strong>Input:</strong> s = &quot;abb&quot;
 * <strong>Output:</strong> 2
 * <strong>Explanation:</strong> &quot;<u>a</u>bb&quot; -&gt; &quot;<u>bb</u>&quot; -&gt; &quot;&quot;.
 * Remove palindromic subsequence &quot;a&quot; then &quot;bb&quot;.
 * </pre>
 *
 * <p><strong>Example 3:</strong></p>
 *
 * <pre>
 * <strong>Input:</strong> s = &quot;baabb&quot;
 * <strong>Output:</strong> 2
 * <strong>Explanation:</strong> &quot;<u>baa</u>b<u>b</u>&quot; -&gt; &quot;<u>b</u>&quot; -&gt; &quot;&quot;.
 * Remove palindromic subsequence &quot;baab&quot; then &quot;b&quot;.
 * </pre>
 *
 * <p>&nbsp;</p>
 * <p><strong>Constraints:</strong></p>
 *
 * <ul>
 * 	<li><code>1 &lt;= s.length &lt;= 1000</code></li>
 * 	<li><code>s[i]</code> is either <code>&#39;a&#39;</code> or <code>&#39;b&#39;</code>.</li>
 * </ul>
 * <div><div>Related Topics</div><div><li>双指针</li><li>字符串</li></div></div><br><div><li>👍 134</li><li>👎 0</li></div>
 *
 * @author xiaoyong3
 * @date 2022/01/22
 */
@Solution(no = "1332", title = "Remove Palindromic Subsequences", difficulty = Difficulty.EASY, url = "https://leetcode-cn.com/problems/remove-palindromic-subsequences/")
public class RemovePalindromicSubsequences {

    public int removePalindromeSub(String s) {
        // 理解题目意思：子序列是不改变顺序的任意位置（不要求连续）的任意个字符
        // 所以abba，所有的a组成的aa也是子序列
        // 那么简单了，如哦整个字符串是回文那就一次清空，不是最多两次（一次所有啊，一次所有b）
        for (int i = 0, j = s.length() - 1; i < j; i++, j--) {
            if (s.charAt(i) != s.charAt(j)) {
                return 2;
            }
        }
        return 1;
    }
}
